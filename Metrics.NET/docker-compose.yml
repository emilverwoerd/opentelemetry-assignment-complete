version: '3.4'

configs:
  prometheus_config:
    file: ./prometheus.yml

networks:
  metrics_network:
    name: metrics_network

services:
  metrics:
    build:
      context: .
      dockerfile: Metrics.NET/Dockerfile
    ports:
      - "8080:80"
    networks:
      - metrics_network
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;

  prometheus:
      image: quay.io/prometheus/prometheus:latest
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus:/etc/prometheus
      networks:
        - metrics_network

  grafana:
    image : grafana/grafana
    depends_on: 
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data/:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./config.monitoring
    networks:
      - metrics_network

  otel-collector:
    image: otel/opentelemetry-collector:0.67.0
    command: [--config=/etc/otel-collector-config.yaml]
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
   #   - 55679:55679 # zpages extension
    networks:
      - metrics_network

